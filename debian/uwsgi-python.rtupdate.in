#!/bin/sh

set -e

if [ "x$1" = "xrtupdate" ]; then
  # Versions of Python interpreter which was available at packaging moment
  # (and for which appropriate uwsgi-pythonX.Y binaries was builded).
  KNOWN_PYVERS="@@available_python_versions@@"

  DEFAULT_UWSGI_ALTERNATIVE_PRIORITY=75
  ALT_UWSGI_ALTERNATIVE_PRIORITY=35

  for MAYBE_NEW_DEFAULT_PYVER in $KNOWN_PYVERS; do

    # Check if pythonX.Y runtime (where pythonX.Y is a new default Python
    # version) was available at packaging moment.
    #
    # If it wasn't available, there is no point in changing default alternative
    # (as appropriate uwsgi-pythonX.Y binary wasn't builded and packaged).
    if [ "x$3" = "xpython$MAYBE_NEW_DEFAULT_PYVER" ]; then

      # Reset prorities of all packaged alternatives of @@uwsgi_binary@@ to
      # lower value.
      for PYVER in $KNOWN_PYVERS; do
        update-alternatives --quiet \
          --install \
            /usr/bin/@@uwsgi_binary@@ @@uwsgi_binary@@ \
            /usr/bin/uwsgi-python$PYVER $ALT_UWSGI_ALTERNATIVE_PRIORITY \
          --slave \
            /usr/share/man/man8/@@uwsgi_binary@@.8.gz @@uwsgi_binary@@.8.gz \
            /usr/share/man/man8/uwsgi-python$PYVER.8.gz
      done

      # Set higher priority for uwsgi-pythonX.Y binary (where pythonX.Y is a
      # new default Python version).
      update-alternatives --quiet \
        --install \
          /usr/bin/@@uwsgi_binary@@ @@uwsgi_binary@@ \
          /usr/bin/uwsgi-$3 $DEFAULT_UWSGI_ALTERNATIVE_PRIORITY \
        --slave \
          /usr/share/man/man8/@@uwsgi_binary@@.8.gz @@uwsgi_binary@@.8.gz \
          /usr/share/man/man8/uwsgi-$3.8.gz

      break # for MAYBE_NEW_DEFAULT_PYVER ...
    fi
  done
fi
