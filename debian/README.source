Building new uwsgi-plugin-X package
===================================

Rules for building uwsgi-plugin-X are created automatically based on
contents of debian/control.

For building new uWSGI plugin one's only necessary to add new package (for
example, 'uwsgi-plugin-brainfuck') in debian/control.

Algorithmically speaking (see it in debian/rules):
  1. Function list_pkgname_suffixes greps debian/control for substring
     'Package: uwsgi-plugin-', then removes this substring from each found
     line. Remaining lines' suffixes are needing plugin names (lua or psgi
     or ...).
  2. List of found suffixes is assigned to variable 'plugins'.
  3. Bunch of rules (each for building specific plugin) is generated from
     'plugins' variable.
  4. In each of these rules 'uwsgiconfig.py --plugin <specific plugin location>'
     is executed.

Also, _remember to add new plugin_ in Depends: and Description: fields of
'uwsgi-plugins-all' binary package (in debian/control).

Managing of quilt-based patch queue in debian/patches
=====================================================

As there is specific patch for Ubuntu, there is also Ubuntu-specific .series
file (namely debian/patches/ubuntu.series).

'series' and 'ubuntu.series' doesn't stacks up, so on adding/removing/renaming
patch you must add/remove/rename it manually both in 'series' and
'ubuntu.series'.

quilt operates with 'series' file by default.

You could manage 'ubuntu.series' with command:

    QUILT_SERIES=ubuntu.series quilt <specific_command>

For example:

    QUILT_SERIES=ubuntu.series quilt series

Why #!/bin/bash in uwsgi-pythonX init.d script?
===============================================

For supporting configuration file names with spaces and/or control characters
Bash-specific features are used (namely, '-d' option of 'read' command and
process substitution).

See their's usage in debian/uwsgi-common-files/init/do_command.
