# This is shell script, sourced by uWSGI init.d script

. /usr/lib/uwsgi/init/specific_daemon

do_command()
{
  local COMMAND=$1
  shift

  # If command is given with arguments, i.e. 'start smth smth_else'
  if [ ! -z "$1" ]; then
    do_with_given_specific_daemons $COMMAND "$@"
    return "$?"
  fi

  local ERRORS=0

  # List of unique names of user-defined configuration files.
  local ALL_CONFNAMES=$(
    ls -1 "$UWSGI_CONFDIR" 2>/dev/null \
    | grep "\.\(ini\|xml\|yaml\|yml\)$" \
    | sed 's/^\(.\+\)\.\(ini\|xml\|yaml\|yml\)$/\1/g' \
    | sort \
    | uniq \
    | tr '\n' ' ' \
  )

  # Do not start if disabled.
  if [ "$COMMAND" = start -a "$RUN_AT_STARTUP" != 1 ]; then
    [ "$VERBOSE" != no ] && log_progress_msg "(disabled; see /etc/default/${NAME})"
    return 2
  fi

  if [ -z "$ALL_CONFNAMES" ]; then
    log_progress_msg "(omitted; missing conffile(s) in /etc/uwsgi/${NAME})"
  else
    # Command actions.
    do_with_given_specific_daemons $COMMAND $ALL_CONFNAMES
    ERRORS=$(expr $ERRORS + $?)
  fi

  return "$ERRORS"
}

do_with_given_specific_daemons()
{
  local COMMAND=$1
  shift

  [ "$VERBOSE" != no -a -n "$1" ] && log_progress_msg "->"

  local ERRORS=0
  for CONFNAME in "$@"; do
    if [ -z $(path_to_conffile_with_name "$CONFNAME") ]; then
      [ "$VERBOSE" != no ] && log_progress_msg "$CONFNAME?"
    else
      case "$COMMAND" in
        start)        do_start_specific_daemon $CONFNAME ;;
        stop)         do_stop_specific_daemon $CONFNAME ;;
        force-reload) do_force_reload_specific_daemon $CONFNAME ;;
        reload|*)     do_reload_specific_daemon $CONFNAME ;;
      esac
      case "$?" in
        0) [ "$VERBOSE" != no ] && log_progress_msg $CONFNAME ;;
        1) [ "$VERBOSE" != no ] && log_progress_msg "($CONFNAME)" ;;
        *) [ "$VERBOSE" != no ] && log_progress_msg "$CONFNAME!"
           ERRORS=$(expr $ERRORS + 1)
        ;;
      esac
    fi
  done

  return "$ERRORS"
}
