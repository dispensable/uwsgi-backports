Description: Fix automagical plugin loading
 uWSGI tries to load plugin if argv[0] contains a '_' character. Name of
 plugin to load is computed as part of argv[0] after last '_'.
 .
 This algorithm has some flaws:
   * argv[0] can be a full path with only directory name contains '_', like
     '/tmp/a_directory/uwsgi', and uWSGI then will try to load plugin named
     'directory/uwsgi'
   * plugin can have a name with '_', like 'rack_ruby18', but with argv[0] of
     '/usr/bin/uwsgi_rack_ruby18' uWSGI will try to load plugin named 'ruby18'
 .
 This patch fixes the algorithm of automagical plugin loading, so uWSGI will
 try to load plugin only if basename of argv[0] contains 'uwsgi_' string. Name
 of plugin to load is computed as part of basename after 'uwsgi_' string.
Author: Leonid Borisenko <leo.borisenko@gmail.com>
Bug: http://projects.unbit.it/uwsgi/ticket/10
Last-Update: 2011-06-10

Index: uwsgi/uwsgi.c
===================================================================
--- uwsgi.orig/uwsgi.c	2011-06-08 22:21:33.000000000 +0300
+++ uwsgi/uwsgi.c	2011-06-08 22:22:09.000000000 +0300
@@ -848,19 +848,18 @@
 
 	//initialize embedded plugins
 	UWSGI_LOAD_EMBEDDED_PLUGINS
-		// now a bit of magic, if the argv[0] contains a _ try to automatically load a plugin
+		// now a bit of magic, if the argv[0] basename contains a 'uwsgi_' string,
+		// try to automatically load a plugin
 		//uwsgi_log("executable name: %s\n", argv[0]);
-	char *p = strtok(argv[0], "_");
-	plugins_requested = NULL;
-	while (p != NULL) {
-		p = strtok(NULL, "_");
-		if (p)
-			plugins_requested = p;
-	}
-
-	if (plugins_requested) {
-		uwsgi_log("plugin = %s\n", plugins_requested);
-		uwsgi_load_plugin(0, plugins_requested, NULL, 0);
+	char *p = strrchr(argv[0], '/');
+	if (p == NULL) p = argv[0];
+	p = strstr(p, "uwsgi_");
+	if (p != NULL) {
+		plugins_requested = strchr(p, '_');
+		if (plugins_requested != NULL && *(++plugins_requested) != '\0') {
+			uwsgi_log("plugin = %s\n", plugins_requested);
+			uwsgi_load_plugin(0, plugins_requested, NULL, 0);
+		}
 	}
 
 	plugins_requested = getenv("UWSGI_PLUGINS");
