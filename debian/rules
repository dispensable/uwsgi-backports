#!/usr/bin/make -f

include /usr/share/cdbs/1/rules/debhelper.mk

# Common variables
# ================

PYTHON=/usr/bin/python
APXS2=/usr/bin/apxs2
APR_CONFIG=/usr/bin/apr-config
APU_CONFIG=/usr/bin/apu-config
UWSGI_BUILDER = $(CURDIR)/uwsgiconfig.py

PYTHON_VERS=$(shell pyversions -vs)
PYTHON_DEFAULT=$(shell pyversions -dv)
PYTHON3_VERS=$(shell py3versions -vs)
PYTHON3_DEFAULT=$(shell py3versions -dv)

# Search in debian/control for packages with name $(1)% and extract % in list.
list_pkgname_suffixes = $(strip \
	$(shell \
		grep "^Package: $(1)" $(CURDIR)/debian/control \
		| sed 's/Package: $(1)//' \
	) \
)

# List of packaged plugins' names
UWSGI_PLUGINS_NAMES = $(call list_pkgname_suffixes,uwsgi-plugin-)
UWSGI_PLUGINS_SRC_DIR = plugins

UWSGI_PLUGIN_PYTHON_PKG_KINDS = python python3

PARTICULARLY_BUILT_UWSGI_PLUGINS = $(UWSGI_PLUGIN_PYTHON_PKG_KINDS)
ORDINARILY_BUILT_UWSGI_PLUGINS := $(filter-out \
	$(PARTICULARLY_BUILT_UWSGI_PLUGINS), $(UWSGI_PLUGINS_NAMES))

# List of packaged Apache2 modules' names
LIBAPACHE2_MODS_NAMES = uwsgi ruwsgi

ruwsgi_to_orig = $(subst ruwsgi,Ruwsgi,$(1))

# List of templates to instantiate for each libapache2-mod-X package
# There is special-case template, not listed here: uwsgi.load
LIBAPACHE2_MOD_PKG_TEMPLATES = install postinst prerm

UWSGI_CORE_DOCS_STAGING_DIR = $(CURDIR)/debian/uwsgi-core-docs-staging

# Discards directory-part of target and returns substring after last '-'
# character
target_name_tail = $(lastword $(subst -, ,$(notdir $(1))))

# From something like:
#   $(call <...>, uwsgi-, $(UWSGI_PLUGIN_PYTHON_PKG_KINDS), .dirs)
# makes list:
#   $(CURDIR)/debian/uwsgi-python.dirs $(CURDIR)/debian/uwsgi-python3.dirs
files_instantiated_in_debian_dir = $(addprefix \
	$(CURDIR)/debian/$(strip $(1)), $(addsuffix $(strip $(3)), $(strip $(2))) \
)

# CDBS-specific variables
# =======================

DEB_COMPRESS_EXCLUDE_uwsgi-core = .py .pl .xml .psgi .png
DEB_COMPRESS_EXCLUDE_uwsgi-extra = .class .java .rb .c

# Rules
# =====

clean::
	# uWSGI executable binary
	$(RM) $(CURDIR)/uwsgi-core
	# intermediate compiled files
	find $(CURDIR) \
		\! -path '$(CURDIR)/debian/*' \( -name '*.o' -o -name '*.pyc' \) -type f \
		-delete
	# plugins
	for PLUGIN_NAME in $(UWSGI_PLUGINS_NAMES); do \
		$(RM) $(CURDIR)/$${PLUGIN_NAME}_plugin.so; \
	done
	for PYVER in $(PYTHON_VERS) $(PYTHON3_VERS); do \
		$(RM) $(CURDIR)/python$${PYVER}_plugin.so; \
	done
	# compiled Apache2 modules
	$(RM) -r $(CURDIR)/apache2/.libs
	$(RM) -r $(addprefix $(CURDIR)/apache2/mod_, \
		$(foreach module_name, $(LIBAPACHE2_MODS_NAMES), \
			$(addprefix $(call ruwsgi_to_orig, $(module_name)), .la .lo .slo) \
	))
	# instantiated build configurations
	$(RM) $(CURDIR)/debian/buildconf/uwsgi-plugin.ini
	# staging directory of uwsgi-core documentation
	$(RM) -r $(UWSGI_CORE_DOCS_STAGING_DIR)
	# instantiated uwsgi-plugin-pythonX templates
	for TEMPLATE_TYPE in dirs install postinst prerm; do\
		$(RM) $(call files_instantiated_in_debian_dir, \
			uwsgi-plugin-, $(UWSGI_PLUGIN_PYTHON_PKG_KINDS), .$${TEMPLATE_TYPE} \
		); \
	done
	# instantiated libapache2-mod-X templates
	for TEMPLATE_TYPE in $(LIBAPACHE2_MOD_PKG_TEMPLATES); do \
		$(RM) $(call files_instantiated_in_debian_dir, \
			libapache2-mod-, $(LIBAPACHE2_MODS_NAMES), .$${TEMPLATE_TYPE} \
		); \
	done
	$(RM) $(addprefix $(CURDIR)/debian/, \
		$(foreach module_name, $(LIBAPACHE2_MODS_NAMES), \
			$(addsuffix .load,  $(call ruwsgi_to_orig, $(module_name))) \
	))
	# generated uwsgi-core manpage
	$(RM) $(CURDIR)/debian/uwsgi-core.1
	# instantiated uwsgi-plugin-N.install files
	$(RM) $(call files_instantiated_in_debian_dir, \
		uwsgi-plugin-, $(UWSGI_PLUGINS_NAMES), .install \
	)
	# stampfiles
	$(RM) $(CURDIR)/debian/stamp-*

# uwsgi package
# -------------

binary-post-install/uwsgi::
	for SUBDIR in apps-available apps-enabled; do \
		cp \
			$(CURDIR)/debian/uwsgi.etc.$${SUBDIR}.README \
			$(CURDIR)/debian/$(cdbs_curpkg)/etc/$(cdbs_curpkg)/$${SUBDIR}/README; \
	done

# uwsgi-core package
# ------------------

build/uwsgi-core:: uwsgi-core

uwsgi-core:
	$(PYTHON) $(UWSGI_BUILDER) \
		--build $(CURDIR)/debian/buildconf/uwsgi-core.ini

install/uwsgi-core::
	test -e $(UWSGI_CORE_DOCS_STAGING_DIR) \
		|| mkdir $(UWSGI_CORE_DOCS_STAGING_DIR)
	cp -r $(CURDIR)/tests $(UWSGI_CORE_DOCS_STAGING_DIR)
	for SUBDIR in conffile psgi wsgi; do \
		mkdir -p $(UWSGI_CORE_DOCS_STAGING_DIR)/examples/$${SUBDIR}; \
	done
	for FILE in logo_uWSGI.png myadmin.py simple_logger.py staticfilesnmp.py; do\
		cp $(CURDIR)/$${FILE} $(UWSGI_CORE_DOCS_STAGING_DIR)/examples; \
	done
	for FILE in mega.xml uwsgi.xml; do \
		cp $(CURDIR)/$${FILE} $(UWSGI_CORE_DOCS_STAGING_DIR)/examples/conffile; \
	done
	for FILE in mojoapp.pl psgi.py test.psgi; do \
		cp $(CURDIR)/$${FILE} $(UWSGI_CORE_DOCS_STAGING_DIR)/examples/psgi; \
	done
	for FILE in hello_world_rrdtool.py mjpeg_stream.py simple_app.py \
	            simple_app_wsgi2.py testapp.py ugreenchat.py uploadtest.py \
	            ; do \
		cp $(CURDIR)/$${FILE} $(UWSGI_CORE_DOCS_STAGING_DIR)/examples/wsgi; \
	done
	chmod a-x $(UWSGI_CORE_DOCS_STAGING_DIR)/examples/wsgi/ugreenchat.py
	help2man \
		--name 'fast (pure C), self-healing, developer-friendly WSGI server' \
		--section 1 \
		--no-info \
		$(CURDIR)/uwsgi-core \
		> $(CURDIR)/debian/uwsgi-core.1; \

# uwsgi-plugin-% packages
# -----------------------

# Build uwsgi-plugin-% package
$(patsubst %,build/uwsgi-plugin-%,$(UWSGI_PLUGINS_NAMES)) \
	:: build/uwsgi-plugin-% \
	:  debian/buildconf/uwsgi-plugin.ini debian/stamp-plugin-%

debian/buildconf/uwsgi-plugin.ini:
	sed -e 's|@@curdir@@|$(CURDIR)|g' \
		< $(CURDIR)/debian/buildconf/uwsgi-plugin.ini.in \
		> $(CURDIR)/debian/buildconf/uwsgi-plugin.ini

# Ordinary building of uWSGI plugins
$(patsubst %,debian/stamp-plugin-%,$(ORDINARILY_BUILT_UWSGI_PLUGINS)):
	$(eval PLUGIN_NAME = $(subst stamp-plugin-,,$(notdir $@)))
	$(PYTHON) $(UWSGI_BUILDER) \
		--plugin $(CURDIR)/$(UWSGI_PLUGINS_SRC_DIR)/$(PLUGIN_NAME) \
		         $(CURDIR)/debian/buildconf/uwsgi-plugin.ini
	touch $@

# Build python2.x_plugin.so/python3.x_plugin.so
$(patsubst %,debian/stamp-plugin-%,$(UWSGI_PLUGIN_PYTHON_PKG_KINDS)):
	$(eval PYTHON_KIND = $(call target_name_tail, $@))
	$(eval PYVERS = $($(subst python,PYTHON,$(PYTHON_KIND))_VERS))
	for PYTHON_VERSION in $(PYVERS); do \
		PLUGIN_NAME=python$$(echo $${PYTHON_VERSION} | tr -d .); \
		$(PYTHON) $(UWSGI_BUILDER) \
			--plugin $(CURDIR)/$(UWSGI_PLUGINS_SRC_DIR)/$${PLUGIN_NAME} \
			         $(CURDIR)/debian/buildconf/uwsgi-plugin.ini; \
		mv \
			$(CURDIR)/$${PLUGIN_NAME}_plugin.so \
			$(CURDIR)/python$${PYTHON_VERSION}_plugin.so; \
	done
	sed -e 's/@@python_kind@@/$(PYTHON_KIND)/g' \
			< $(CURDIR)/debian/uwsgi-plugin-python.dirs.in \
			> $(CURDIR)/debian/uwsgi-plugin-$(PYTHON_KIND).dirs
	touch $@

# Install uwsgi-plugin-% package for ordinarily built uWSGI plugin
$(patsubst %,install/uwsgi-plugin-%,$(ORDINARILY_BUILT_UWSGI_PLUGINS))::
	$(eval PLUGIN_NAME = $(subst -,_,$(subst uwsgi-plugin-,,$(notdir $@))))
	sed -e 's/@@plugin_name@@/$(PLUGIN_NAME)/g' \
		< $(CURDIR)/debian/uwsgi-plugin.install.in \
		> $(CURDIR)/debian/$(cdbs_curpkg).install

# Install uwsgi-plugin-python/uwsgi-plugin-python3 packages
$(patsubst %,install/uwsgi-plugin-%,$(UWSGI_PLUGIN_PYTHON_PKG_KINDS))::
	$(eval PYTHON_KIND = $(call target_name_tail, $@))
	$(eval PYVERS = $($(subst python,PYTHON,$(PYTHON_KIND))_VERS))
	$(eval PYDEFAULT = $($(subst python,PYTHON,$(PYTHON_KIND))_DEFAULT))
	for TEMPLATE_TYPE in postinst prerm; do \
		sed \
			-e 's/@@available_python_versions@@/$(PYVERS)/g' \
			-e 's/@@default_python_version@@/$(PYDEFAULT)/g' \
			-e 's/@@python_kind@@/$(PYTHON_KIND)/g' \
				< $(CURDIR)/debian/uwsgi-plugin-python.$${TEMPLATE_TYPE}.in \
				> $(CURDIR)/debian/$(cdbs_curpkg).$${TEMPLATE_TYPE}; \
	done
	for PYTHON_VERSION in $(PYVERS); do \
		sed -e "s/@@plugin_name@@/python$${PYTHON_VERSION}/g" \
			< $(CURDIR)/debian/uwsgi-plugin.install.in \
			>> $(CURDIR)/debian/$(cdbs_curpkg).install; \
	done

# Binary-post-install uwsgi-plugin-python/uwsgi-plugin-python3 packages
$(patsubst %,binary-post-install/uwsgi-plugin-%,$(UWSGI_PLUGIN_PYTHON_PKG_KINDS))::
	$(eval PYTHON_KIND = $(call target_name_tail, $@))
	$(eval PYVERS = $($(subst python,PYTHON,$(PYTHON_KIND))_VERS))
	$(eval PYTHON_RTUPDATE_SCRIPT = \
		$(CURDIR)/debian/$(cdbs_curpkg)/usr/share/$(PYTHON_KIND)/runtime.d/uwsgi-plugin-$(PYTHON_KIND).rtupdate \
	)
	sed \
		-e 's/@@available_python_versions@@/$(PYVERS)/g' \
		-e 's/@@python_kind@@/$(PYTHON_KIND)/g' \
			< $(CURDIR)/debian/uwsgi-plugin-python.rtupdate.in \
			> $(PYTHON_RTUPDATE_SCRIPT)
	chmod 755 $(PYTHON_RTUPDATE_SCRIPT)

# libapache2-mod-% packages
# -------------------------

# Build libapache2-mod-% package
$(patsubst %,build/libapache2-mod-%,$(LIBAPACHE2_MODS_NAMES)):: build/% : debian/stamp-%

# Build specific Apache2 module
$(patsubst %,debian/stamp-libapache2-mod-%,$(LIBAPACHE2_MODS_NAMES)):
	$(eval MODULE_NAME = $(call ruwsgi_to_orig, $(call target_name_tail, $@)))
	$(APXS2) -c \
		`$(APR_CONFIG) --link-ld` `$(APU_CONFIG) --link-ld` \
		$(CURDIR)/apache2/mod_$(MODULE_NAME).c
	touch $@

# Install libapache2-mod-% package
$(patsubst %,install/libapache2-mod-%,$(LIBAPACHE2_MODS_NAMES))::
	$(eval MODULE_NAME = $(call ruwsgi_to_orig, $(call target_name_tail, $@)))
	sed -e 's/@@module_name@@/$(MODULE_NAME)/g' \
		< $(CURDIR)/debian/uwsgi.load.in \
		> $(CURDIR)/debian/$(MODULE_NAME).load
	for TEMPLATE_TYPE in $(LIBAPACHE2_MOD_PKG_TEMPLATES); do \
		sed -e 's/@@module_name@@/$(MODULE_NAME)/g' \
			< $(CURDIR)/debian/libapache2-mod.$${TEMPLATE_TYPE}.in \
			> $(CURDIR)/debian/$(cdbs_curpkg).$${TEMPLATE_TYPE} ; \
	done

# Some other packages
# -------------------

binary-install/python-django-uwsgi-admin::
	dh_install -p $(cdbs_curpkg) \
		django/uwsgi_admin \
		usr/lib/python$(PYTHON_DEFAULT)/dist-packages
	dh_python2 -p $(cdbs_curpkg)

